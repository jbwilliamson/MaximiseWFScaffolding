<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="vb" #>
<#@ include file="Imports.include.t4" #>
Imports <#= DefaultNamespace #>.Extenders;
Imports <#= DefaultNamespace #>.Repositories;
Imports <#= DefaultNamespace #>.FieldTemplates;
Imports ScaffoldFilter;

Public Partial Class <#=CodeBesideName#>
	Inherits System.Web.UI.Page

	Private _repository As New <#=ModelName#>Repository(Of <#=FullModelName#>, System.Nullable(Of <#=PrimaryKeyType#>))()

	Protected Sub Page_Init()
		fv<#=ModelName#>.SetDataMethodsObject(_repository)
		fv<#=ModelName#>.RedirectToRouteOnItemCommand("~/Maintain/vCourse/Default")
		fv<#=ModelName#>.RedirectToRouteOnItemUpdated("~/Maintain/vCourse/Default")
	End Sub

	Public Sub ForeignKeyEventHandler_LoadForeignKey(e As ForeignModelEventArgs)
		e.returnResults = _repository.GetForeignList(e.foreignKeyModel, e.keyType)
	End Sub

	Protected Sub dcForeignKey_Load(sender As Object, e As EventArgs)
		Dim dc As System.Web.DynamicData.DynamicControl = DirectCast(sender, System.Web.DynamicData.DynamicControl)
		Dim fkef As ForeignKey_EditField = DirectCast(dc.FieldTemplate, ForeignKey_EditField)

		If fkef IsNot Nothing Then
			fkef.ForeignKey += New ForeignKeyEventHandler(AddressOf ForeignKeyEventHandler_LoadForeignKey)
		End If
	End Sub
End Class












	Protected _db As New <#=DbContextTypeName#>()

	Protected Sub Page_Load(sender As Object, e As EventArgs)
	End Sub

	' This is the Update methd to update the selected <#=ModelName#> item
	' USAGE: <asp:FormView UpdateMethod="UpdateItem">
	Public Sub UpdateItem(<#=PrimaryKeyName#> As <#=PrimaryKeyType#>)
		Using _db
			Dim item = _db.<#=PluralizedModelName#>.Find(<#=PrimaryKeyName#>)

			If item Is Nothing Then
				' The item wasn't found
				ModelState.AddModelError("", [String].Format("Item with id {0} was not found", <#=PrimaryKeyName#>))
				Return
			End If

			TryUpdateModel(item)

			If ModelState.IsValid Then
				' Save changes here
				_db.SaveChanges()
				Response.Redirect("../Default")
			End If
		End Using
	End Sub

	' This is the Select method to selects a single <#=ModelName#> item with the id
	' USAGE: <asp:FormView SelectMethod="GetItem">
	Public Function GetItem(<FriendlyUrlSegmentsAttribute(0)> <#=PrimaryKeyName#> As System.Nullable(Of <#=PrimaryKeyType#>)) As <#=FullModelName#>
		If <#=PrimaryKeyName#> Is Nothing Then
			Return Nothing
		End If

		Using _db
			Return _db.<#=PluralizedModelName#>.Find(<#=PrimaryKeyName#>)
		End Using
	End Function

	Protected Sub ItemCommand(sender As Object, e As FormViewCommandEventArgs)
		If e.CommandName.Equals("Cancel", StringComparison.OrdinalIgnoreCase) Then
			Response.Redirect("../Default")
		End If
	End Sub
End Class
