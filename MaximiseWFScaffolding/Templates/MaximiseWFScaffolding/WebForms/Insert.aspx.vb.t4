<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="vb" #>
<#@ include file="Imports.include.t4" #><##>
<#if(IsAsyncRepository) {#>
Imports System.Threading.Tasks
<#}#>
Imports <#= DefaultNamespace #>.Extenders
Imports <#= DefaultNamespace #>.Repositories
Imports ScaffoldFilter

Public Partial Class <#=CodeBesideName#>
	Inherits System.Web.UI.Page
<#if(IsAsyncRepository) {#>
	Private _repository As New <#=ModelName #>RepositoryAsync(Of <#=FullModelName#>, <#=PrimaryKeyType#>)()
<#} else {#>
	Private _repository As New <#=ModelName #>Repository(Of <#=FullModelName#>, <#=PrimaryKeyType#>)()
<#}#>

	Protected Sub Page_Init()
		fv<#=ModelName #>.SetDataMethodsObject(_repository)
		fv<#=ModelName #>.RedirectToRouteOnItemInserted("~/<#=RelativePath#>/Default")
		fv<#=ModelName #>.RedirectToRouteOnItemCommand("~/<#=RelativePath#>/Default")
	End Sub

<#if(IsAsyncRepository) {#>
	Public Function ForeignKeyEventHandler_LoadForeignKey(e As ForeignModelEventArgs) As Task
		e.returnResults = Await _repository.GetForeignListAsync(e.foreignKeyModel, e.keyType)
	End Function
<#} else {#>
	Public Sub ForeignKeyEventHandler_LoadForeignKey(e As ForeignModelEventArgs)
		e.returnResults = _repository.GetForeignList(e.foreignKeyModel, e.keyType)
	End Sub
<#}#>

	Protected Sub dcForeignKey_Load(sender As Object, e As EventArgs)
		Dim dc As System.Web.DynamicData.DynamicControl = DirectCast(sender, System.Web.DynamicData.DynamicControl)
		Dim fkef As ForeignKey_EditField = DirectCast(dc.FieldTemplate, ForeignKey_EditField)

		If fkef IsNot Nothing Then
<#if(IsAsyncRepository) {#>
			AddHandler fkef.ForeignKey, New AsyncForeignKeyEventHandler(AddressOf ForeignKeyEventHandler_LoadForeignKey)
<#} else {#>
			AddHandler fkef.ForeignKey, New ForeignKeyEventHandler(AddressOf ForeignKeyEventHandler_LoadForeignKey)
<#}#>
		End If
	End Sub
End Class

